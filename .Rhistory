library(ggedit)
install.packages('ggedit')
library(ggedit)
library(ggplot2)
p<- ggplot(mtcars, aes(x = hp, y = wt)) + geom_point() + geom_smooth()
p2 <- ggedit(p)
p2 <- ggedit(p)
install.packages("argparse")
install.packages("ks")
install.packages("mclust")
install.packages(c("opt", "parse"))
install.packages("optparse")
install.packages("ks")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pcaMethods", version = "3.8")
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
setwd("~/Dropbox/My Files/Mac/Programming/Log/dashboard/analysis")
library(shiny); runApp('shiny_app.r')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
runApp('shiny_app_xg.r')
library(quantmod)
library(timetk)
library(reticulate)
use_condaenv( "py37")
QA <- import('QUANTAXIS')
Qi <- import('qi_library_qa')
Qi$QA_get_stockinfo(['600066'])
Qi$QA_get_stockinfo(c('600066'))
Qi$QA_fetch_get_stock_info("600066")
Qi$QA_get_stockinfo("000001")
Qi$gap_list('600066')
res=QA$QA_fetch_financial_report(['000001','600100'],['2017-03-31','2017-06-30','2017-09-31','2017-12-31','2018-03-31'])
res=QA$QA_fetch_financial_report(['000001','600100'],['2017-03-31','2017-06-30','2017-09-31','2017-12-31','2018-03-31'])
Qi$QA_get_stockinfo("000001")
Qi$QA_fetch_get_stock_info("000001")
Qi$QA_fetch_get_stock_info("000001",'CN')
Qi$QA_fetch_get_stock_info("000001",'CN')
library(quantmod)
library(timetk)
library(reticulate)
#use_condaenv( "py37")
use_python("~/environments/my_env/bin/python")
QA <- import('QUANTAXIS')
Qi <- import('qi_library_qa')
today = Sys.Date()
d <- Qi$gap_list('600066')
d
d(c('code','close2'))
d[c('code','close2')]
d[c('date',close2','up_count','down_count','diff','current_close')]
d[c('date','close2','up_count','down_count','diff','current_close')]
library(shiny); runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
library(quantmod)
library(timetk)
library(reticulate)
#use_condaenv( "py37")
use_python("~/environments/my_env/bin/python")
QA <- import('QUANTAXIS')
Qi <- import('qi_library_qa')
today = Sys.Date()
Qi$gap_list("600066")
out <- Qi$gap_list("600066")
out$date = as.Date(out$date)
out
runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
gap_data
runApp('shiny_app.r')
gap_data
runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
runApp('shiny_app.r')
runApp('shiny_app.r')
install.packages("tidyverse")
runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
library(shiny); runApp('shiny_app.r')
install.packages('IRkernel')
plot(cars)
library(reticulate)
use_condaenv( "py37")
install.packages("rticles")
knitr::opts_chunk$set(warning = F, message = F)
library(reticulate)
library(tidyverse)
library(quantmod)
library(timetk)
use_condaenv( "py37")
#df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(py$df1)
#df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(py$df1)
knitr::opts_chunk$set(warning = F, message = F)
library(reticulate)
library(tidyverse)
library(quantmod)
library(timetk)
use_condaenv( "py37")
library(reticulate)
knitr::opts_chunk$set(warning = F, message = F)
library(reticulate)
library(tidyverse)
library(quantmod)
library(timetk)
use_condaenv( "py37")
knitr::opts_chunk$set(warning = F, message = F)
library(reticulate)
library(tidyverse)
library(quantmod)
library(timetk)
use_condaenv( "py37")
#use_python("~/environments/my_env/bin/python")
QA <- import('QUANTAXIS')
Qi <- import('qi_library_qa')
today = Sys.Date()
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("day", code))
knitr::opts_chunk$set(warning = F, message = F)
library(reticulate)
library(tidyverse)
library(quantmod)
library(timetk)
use_condaenv( "py37")
#use_python("~/environments/my_env/bin/python")
QA <- import('QUANTAXIS')
Qi <- import('qi_library_qa')
today = Sys.Date()
myTheme<-chart_theme()
myTheme$col$up.col<-'darkgreen'
myTheme$col$dn.col<-'darkred'
myTheme$col$dn.border <- 'black'
myTheme$col$up.border <- 'black'
myTheme$rylab <- FALSE
myTheme$col$grid <- "lightgrey"
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("day", code))
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("日线", code))
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("day", code))
knitr::opts_chunk$set(warning = F, message = F)
library(reticulate)
library(tidyverse)
library(quantmod)
library(timetk)
use_condaenv( "py37")
#use_python("~/environments/my_env/bin/python")
QA <- import('QUANTAXIS')
Qi <- import('qi_library_qa')
today = Sys.Date()
myTheme<-chart_theme()
myTheme$col$up.col<-'darkgreen'
myTheme$col$dn.col<-'darkred'
myTheme$col$dn.border <- 'black'
myTheme$col$up.border <- 'black'
myTheme$rylab <- FALSE
myTheme$col$grid <- "lightgrey"
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("日线", code))
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("日线", code))
knitr::opts_chunk$set(warning = F, message = F)
library(reticulate)
library(tidyverse)
library(quantmod)
library(timetk)
use_condaenv( "py37")
#use_python("~/environments/my_env/bin/python")
QA <- import('QUANTAXIS')
Qi <- import('qi_library_qa')
today = Sys.Date()
myTheme<-chart_theme()
myTheme$col$up.col<-'darkgreen'
myTheme$col$dn.col<-'darkred'
myTheme$col$dn.border <- 'black'
myTheme$col$up.border <- 'black'
myTheme$rylab <- FALSE
myTheme$col$grid <- "lightgrey"
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("日线", code))
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("日线", code))
code = '600066'
df1 = Qi$QA_fetch_data_day_adv(code, '2019-6-1',today)
#data = df1$data
#data$date = df1$datetime$values
df = tk_xts(df1)
#colnames(df) <- c('Open', 'High', 'Low', 'Close', 'Volume', 'Amount')
chart_Series(df,subset='2019-6::2019-9',TA="add_Vo();add_BBands();add_SMA(5)", theme = myTheme, name= paste("日线", code))
unlink('data_analysis_cache', recursive = TRUE)
sessionInfo()
setwd("~/Dropbox/My Files/Mac/Programming/Web/hugo")
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("formattable")
blogdown:::serve_site()
install.packages("kableExtra")
blogdown:::serve_site()
install.packages("gganimate")
blogdown:::serve_site()
install.packages("gifski")
blogdown:::serve_site()
install.packages("ggimage")
blogdown:::serve_site()
install.packages("plotly")
install.packages("data.table")
install.packages("plotly")
blogdown:::serve_site()
install.packages("BBmisc")
blogdown:::serve_site()
install.packages("ape")
blogdown:::serve_site()
install.packages("dtwclust")
blogdown:::serve_site()
install.packages("tidyquant")
blogdown:::serve_site()
install.packages("ggridges")
blogdown:::serve_site()
blogdown:::serve_site()
