library(tidyquant)
setwd("~/Dropbox/My Files/Mac/Programming/rshiny1/shiny1")
shiny::runApp()
setwd("~/Dropbox/My Files/Mac/Programming/rshiny1/shiny1")
knitr::opts_chunk$set(warning = F, message = F)
options(warn = -1)
source("qi_r_function.r")
library(gganimate)
library(gifski)
library(ggimage)
library(lubridate)
library(usethis)
library(tidyquant)
library(ggridges)
name <- "宇通客车"
today <- Sys.Date()
library(plotly)
start_date = '2019-07-01'
end_date = today
code = '510050'
df = Qi$QA_fetch_data_day_adv(code, start_date, end_date)
df2 = rbind(mutate(df, name='50ETF', code = '510050'), py$df)
df3 <- df2 %>% group_by(name) %>% mutate(adj.close = (close /close[1] - 1) * 100  )
df3$date <-  as.Date(df3$date)
df3 <- data.frame(df3)
p <- ggplot() + geom_line(data=df3, aes(x=date, y=adj.close, color = name))
ggplotly(p)
library(ggridges)
pr <- ggplot(df3, aes(date, name, height=adj.close / 10, group = name)) + geom_ridgeline(fill="lightblue")
#d <- data.frame(x = rep(1:5, 3), y = c(rep(0, 5), rep(1, 5), rep(3, 5)),
#             height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1))
#ggplot(d, aes(x, y, height = height, group = y)) + geom_ridgeline(fill="lightblue")
#ggplot(movies[movies$year>1912,], aes(x = length, y = year, group = year)) +
#  geom_density_ridges(scale = 10, size = 0.25, rel_min_height = 0.03) +
#  theme_ridges() +
#  scale_x_continuous(limits=c(1, 200), expand = c(0.01, 0)) +
#  scale_y_reverse(breaks=c(2000, 1980, 1960, 1940, 1920, 1900), expand = c(0.01, 0))
pr
library(ggridges)
df4 <- df3 %>% group_by(name) %>% filter(date >= "2019-09-01")
pr4 <- ggplot(df4, aes(date, name, height=adj.close /10, group = name)) + geom_ridgeline(fill="lightblue")
pr4
df_510050 =  df3 %>% filter(code == "510050") %>% select(date, adj.close)
ggplot(df3, aes(x=date,y=adj.close, group=name)) + geom_line() + facet_wrap(~ name, ncol = 6, scales = "free") +
geom_line(data = df_510050, aes(date, adj.close), colour = "red")
df3 %>%
ggplot(aes(x = date, y = close, group  = name)) +
geom_candlestick(aes(open = open, high = high, low = low, close = close), fill_up = "black") +
#labs(title = "AAPL Candlestick Chart", y = "Closing Price", x = "") +
#theme_tq() +
geom_ma(n = 5, color = "darkgreen", linetype= "solid") +
facet_wrap(~ name, ncol = 5, scales = "free")
start_date = '2019-07-01'
end_date = today
code = '510050'
df = Qi$QA_fetch_data_day_adv(code, start_date, end_date)
df2 = rbind(mutate(df, name='50ETF', code = '510050'), py$df)
df2<- df2 %>% select(date,close,name) %>% pivot_wider(names_from = date, values_from = close)
row.names(df2) <- df2$name
df2$name = NULL
df2.norm = t(BBmisc::normalize(t(df2), method="standardize",margin=2))
df2<-t(scale(t(df2)))
library(ape)
disMatrix <-  dist(df2, method="euclidean")
hc<- hclust(disMatrix, method="average")
colors =c("red","blue","green","black")
clus4 = cutree(hc,4)
#plot(as.phylo(hc), type="fan", tip.color = colors[clus4],label.offset =0 , cex=1)
library(dtwclust)
lastcol = df2[,ncol(df2)]
print(lastcol[is.na(lastcol)])
clust.hier <- tsclust(df2, type="h",k=10L,distance="dtw")
runApp('~/Dropbox/My Files/Mac/Programming/rshiny1/shiny3')
install.packages("sparklyr")
install.packages(c("nycflights13", "Lahman"))
library(sparklyr)
sc <- spark_connect(master = "local")
library(dplyr)
iris_tbl <- copy_to(sc, iris)
library(dplyr)
library((nycflights13)
library(Lahman)
install.packages("nycflights13")
install.packages("Lahman")
library(dplyr)
library((nycflights13)
library(Lahman)
library(dplyr)
library(nycflights13)
library(Lahman)
iris_tbl <- copy_to(sc, iris)
Sys.unsetenv("SPARK_HOME")
library(sparklyr)
sc <- spark_connect(master = "local")
spark_install(version = "2.4.4")
spark_available_versions()
spark_install(version = "2.4")
library(sparklyr)
sc <- spark_connect(master = "local")
library(sparklyr)
sc <- spark_connect(master = "local")
library(dplyr)
library(nycflights13)
library(Lahman)
iris_tbl <- copy_to(sc, iris)
flights_tbl <- copy_to(sc, nycflights13::flights, "flights")
batting_tbl <- copy_to(sc, Lahman::Batting, "batting")
src_tbls(sc)
flights_tbl %>% filter(dep_delay == 2)
flights_tbl %>% filter(dep_delay == 2)
delay <- flights_tbl %>%
group_by(tailnum) %>%
summarise(count = n(), dist = mean(distance), delay = mean(arr_delay)) %>%
filter(count > 20, dist < 2000, !is.na(delay)) %>%
collect
# plot delays
library(ggplot2)
ggplot(delay, aes(dist, delay)) +
geom_point(aes(size = count), alpha = 1/2) +
geom_smooth() +
scale_size_area(max_size = 2)
setwd("~/Dropbox/My Files/Mac/Programming/Web/hugo/content/post")
blogdown:::serve_site()
